<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.skillspace.sgs.host.space.HostSpaceMapper">

<insert id="create" parameterType="com.skillspace.sgs.host.space.HostSpaceDTO" 
	useGeneratedKeys="true" keyProperty="host_space_id">
	
	insert into 
		host_space(
			user_id,
			cate_id,
			space_name,
			main_title,
			sub_title,
			space_intro,
			space_guide,
			space_zipcode,
			space_addr,
			space_addrdetail,
			is_visible
		)
		values(
			#{user_id},
			#{cate_id},
			#{space_name},
			#{main_title},
			#{sub_title},
			#{space_intro},
			#{space_guide},
			#{space_zipcode},
			#{space_addr},
			#{space_addrdetail},
			#{is_visible}
		)
</insert>

<select id="getHostSpaceWithCateAndImagesById" parameterType="Integer" resultMap="SpaceWithImageMap">
	select 
		host_space_id,
		user_id,
		cate_id,
		space_name,
		main_title,
		sub_title,
		space_intro,
		space_guide,
		space_zipcode,
		space_addr,
		space_addrdetail,
		created_at,
		updated_at,
		is_visible
	from
		host_space
	where 
		host_space_id = #{host_space_id}
</select>

<select id="spaceList" parameterType="Map" resultMap="SpaceWithImageMap">
	select 
	    s.host_space_id,
		s.user_id,
		s.cate_id,
		s.space_name,
		s.main_title,
		s.sub_title,
		s.space_intro,
		s.space_guide,
		s.space_zipcode,
		s.space_addr,
		s.space_addrdetail,
		s.created_at,
		s.updated_at,
		s.is_visible
	from
	    host_space s
	inner join
		category c
	on
		s.cate_id = c.cate_id
	where 
	    user_id = #{user_id}
	    <include refid="search"></include>
	    <include refid="period"></include>
	    <include refid="visible_status"></include>
	order by 
	    s.host_space_id <if test="cri.orderBy.equals('desc')">desc</if>
	limit
	    #{cri.pageStart}, #{cri.perPageNum}

</select>

<select id="getCountSpaceByUser_id" parameterType="String" resultType="int">
	select
		count(*)
	from
		host_space
	where
		user_id = #{user_id}
</select>

<update id="modifyHostSpace" parameterType="com.skillspace.sgs.host.space.HostSpaceDTO">
	update 
		host_space
    set
	    cate_id = #{cate_id},
	    space_name = #{space_name},
	    main_title = #{main_title},
	    sub_title = #{sub_title},
	    space_intro = #{space_intro},
	    space_guide = #{space_guide},
	    space_zipcode = #{space_zipcode},
	    space_addr = #{space_addr},
	    space_addrdetail = #{space_addrdetail},
	    is_visible = #{is_visible},
	    updated_at = now()
	where 
		host_space_id = #{host_space_id}
</update>

<delete id="deleteHostSpace" parameterType="Integer">
	delete from 
		host_space 
	where 
		host_space_id = #{host_space_id}
</delete>

<delete id="selectedDelete">
	delete from 
		host_space 
	where 
		host_space_id in 
	<foreach collection="host_space_id_arr" item="host_space_id" open="(" separator="," close=")">
		#{host_space_id}
	</foreach>
</delete>

<select id="getHostSpaceByUserId" parameterType="String" resultType="com.skillspace.sgs.host.space.HostSpaceDTO">
	select 
		host_space_id,
		user_id,
		cate_id,
		space_name,
		main_title,
		sub_title,
		space_intro,
		space_guide,
		space_zipcode,
		space_addr,
		space_addrdetail,
		created_at,
		updated_at,
		is_visible
	from
		host_space
	where 
		user_id = #{user_id}
</select>

<resultMap id="SpaceWithImageMap" type="com.skillspace.sgs.host.space.HostSpaceDTO">
	<!-- HostSpaceDTO 기본 정보 -->
    <id property="host_space_id" column="host_space_id"/> <!-- Review PK -->
    <result property="user_id" column="user_id"/>
    <result property="cate_id" column="cate_id"/>
    <result property="space_name" column="space_name"/>
    <result property="main_title" column="main_title"/>
    <result property="sub_title" column="sub_title"/>
    <result property="space_intro" column="space_intro"/>
    <result property="space_guide" column="space_guide"/>
    <result property="space_zipcode" column="space_zipcode"/>
    <result property="space_addr" column="space_addr"/>
    <result property="space_addrdetail" column="space_addrdetail"/>
    <result property="created_at" column="created_at"/>
    <result property="updated_at" column="updated_at"/>
    <result property="is_visible" column="is_visible"/>
    
    <!-- Category 1:1 매핑 -->
        <association 
        	property="category" 
	        javaType="com.skillspace.sgs.admin.category.CategoryDTO" 
	        column="cate_id" 
	        select="selectCategory"/>
    
     <!-- Images 1:N 매핑 -->
        <collection 
        	property="images" 
        	javaType="java.util.ArrayList" 
        	ofType="com.skillspace.sgs.admin.images.ImagesDTO" 
        	column="host_space_id" 
        	select="selectImages"/>
</resultMap>

<!-- Category 정보 조회 -->
<select id="selectCategory" resultType="com.skillspace.sgs.admin.category.CategoryDTO">
    select
        cate_id,
        cate_prtcode,
        cate_name,
        level,
        sort_order
    from
        category
    where
        cate_id = #{cate_id}
</select>


<!-- images 목록 조회 -->
<select id="selectImages" resultType="com.skillspace.sgs.admin.images.ImagesDTO">
    select
        image_id,
        entity_type,
        entity_id,
        image_up_folder,
        image_name,
        created_at
    from
        images
    where
        entity_type = 'host_space'
        and entity_id = #{host_space_id}
</select>

<sql id="search">
	<if test="cri.searchType != null and !cri.searchType.equals('')">
	   	<if test="cri.searchType == 'main_title'">
	   		and s.main_title like concat('%', #{cri.keyword}, '%')
	   	</if>
	   	<if test="cri.searchType == 'sub_title'">
	   		and s.sub_title like concat('%', #{cri.keyword}, '%')
	   	</if>
	   	<if test="cri.searchType == 'all_title'">
	   		and (s.main_title like concat('%', #{cri.keyword}, '%')
	   		or s.sub_title like concat('%', #{cri.keyword}, '%'))
	   	</if>
	   	<if test="cri.searchType == 'cate_name'">
	   		and c.cate_name like concat('%', #{cri.keyword}, '%') 
	   	</if>
	</if>
</sql>

<sql id="period">
	<if test="searchItem.start_date != null and !searchItem.start_date.equals('')">
		<![CDATA[
			and s.created_at >= date(#{searchItem.start_date})
			]]>
	</if>
	<if test="searchItem.end_date != null and !searchItem.end_date.equals('')">
		<![CDATA[
			and s.created_at < date(#{searchItem.end_date}) + 1
			]]>
	</if>
</sql>

<sql id="visible_status">
	<if test="searchItem.visible_status != null and !searchItem.visible_status.equals('')">
			and s.is_visible = #{searchItem.visible_status}
	</if>
</sql>



</mapper>