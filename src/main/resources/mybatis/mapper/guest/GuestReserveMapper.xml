<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.skillspace.sgs.guest.reserve.GuestReserveMapper">

<!-- 예약 생성 -->
<insert id="reservation_create" parameterType="com.skillspace.sgs.guest.reserve.ReservationDTO" 
	useGeneratedKeys="true" keyProperty="reservation_id">
	insert into reservations (
		user_id, 
		product_id, 
		total_payment, 
		status, 
		reservation_date, 
		start_time, 
		end_time, 
		headcount, 
		reservation_name, 
		reservation_phone, 
		reservation_email
	) 
	values (
		#{user_id}, 
		#{product_id}, 
		#{total_payment}, 
		#{status}, 
		#{reservation_date}, 
		#{start_time}, 
		#{end_time}, 
		#{headcount}, 
		#{reservation_name}, 
		#{reservation_phone}, 
		#{reservation_email}
	)
</insert>

<!-- 예약 결과 조회 -->
<select id="getReservationResultByReservationId" parameterType="Integer" resultType="Map">
	select
		r.status as reservation_status,
		r.reservation_date,
		r.start_time,
		r.end_time,
		r.headcount,
		r.reservation_name,
		r.reservation_phone,
		r.reservation_email,
		pay.payment_method,
		pay.amount,
		pay.status as payment_status,
		pro.name as product_name,
		hs.main_title
	from
		reservations r
	inner join
		products pro
	on
		r.product_id = pro.product_id
	inner join
		payments pay
	on 
		r.reservation_id = pay.reservation_id
	inner join 
		host_space hs 
	on 
		hs.host_space_id = pro.host_space_id 
	where
		r.reservation_id = #{reservation_id}
</select>

<!-- 유저 아이디로 예약 목록 조회 -->
<select id="getReservationListByUserId" resultType="Map">
	select
		r.reservation_id,
		r.user_id,
		r.product_id,
		r.total_payment,
		r.status as reservation_status,
		r.reservation_date,
		r.start_time,
		r.end_time,
		r.headcount,
		r.is_review,
		r.reservation_name,
		r.reservation_phone,
		r.reservation_email,
		r.created_at as reservation_created_at,
		r.updated_at as reservation_updated_at,
		hs.main_title,
		pro.name as product_name,
		pay.payment_id,
		pay.payment_method,
		pay.amount,
		pay.status as payment_status,
		pay.created_at as payment_created_at,
		pay.updated_at as payment_updated_at
	from
		reservations r
	inner join
		payments pay
	on 
		r.reservation_id = pay.reservation_id
	inner join
		products pro
	on
		r.product_id = pro.product_id
	inner join 
		host_space hs 
	on 
		hs.host_space_id = pro.host_space_id 
	where
		r.user_id = #{user_id}
	order by
		r.created_at <if test="cri.orderBy.equals('desc')">desc</if>
	limit 
		#{cri.pageStart}, #{cri.perPageNum}
</select>

<!-- 유저 아이디로 예약 목록 개수 조회 -->
<select id="getCountReservationListByUserId" resultType="int">
	select
		count(*)
	from
		reservations r
	where
		r.user_id = #{user_id}
</select>

<!-- 예약 아이디로 예약 조회 -->
<select id="getReservationById" parameterType="Integer" resultType="com.skillspace.sgs.guest.reserve.ReservationDTO">
	select
		r.reservation_id,
		r.user_id,
		r.product_id,
		r.total_payment,
		r.status,
		r.reservation_date,
		r.start_time,
		r.end_time,
		r.headcount,
		r.is_review,
		r.reservation_name,
		r.reservation_phone,
		r.reservation_email,
		r.created_at,
		r.updated_at
	from
		reservations r
	where
		r.reservation_id = #{reservation_id}
</select>


<!-- 예약상태 변경 -->
<update id="updateReservationStatus">
	update
		reservations
	set
		status = #{status}
	where
		reservation_id = #{reservation_id}
</update>



</mapper>